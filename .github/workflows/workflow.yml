name: Publish
on:
  push:
    branches:
      - master

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    env:
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    steps:

      - name: Checkout
        uses: actions/checkout@master

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Python distribute
        run: python setup.py sdist
        working-directory: python

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform

      - name: tflint
        run: docker run --rm -v $(pwd):/data -t wata727/tflint
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan
        working-directory: terraform

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan
        working-directory: terraform

      - name: Azure Login
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: Azure/login@v1.1
        with:
          enable-AzPSSession: false
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'

      - name: Upload Python package
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: az storage blob upload --connection-string="$(terraform output python_storage_connection_string)" --container-name="$(terraform output python_storage_container_name)" --name="sensors.tar.gz" --file="../python/dist/sensors-0.1.tar.gz"
        working-directory: terraform

      - name: Trigger deployment
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: 'curl -X POST -sl "https://labs.debruyn.dev/homelab-trigger-deployment" -H "Content-Type: application/json" -H "X-Hook-Timeout: 300" -d "{\"secret\": \"$(terraform output deployment_secret)\", \"eventhub_name\": \"$(terraform output eventhub_name)\", \"eventhub_connection_string\": \"$(terraform output eventhub_connection_string)\"}"'
        working-directory: terraform
